version: '3'
services:
  file-db:
    image: 'postgres:10.5'
    environment:
      POSTGRES_PASSWORD: 123
    #    volumes:
    #      - full-share-file-db:/var/lib/postgresql/data
    ports:
    - '5432:5432'
    restart: always

  file-manager:
    depends_on:
    - file-db
    - elasticsearch
    build: 'full-share/server/server/.'
    image: 'full-share-file-manager'
    volumes:
    - download-volume:/app/download
    restart: always
    environment:
    - WEBSITE_DOMAIN=localhost:8080
    - WEBSITE_PROTOCOL=https://

  full-share-nginx:
    depends_on:
    - file-manager
    build:
      context: full-share/nginx
      dockerfile: Dockerfile-dev
    image: 'full-share-nginx'
    volumes:
    - ./full-share/web/build:/usr/share/nginx/html:ro
    - download-volume:/full-share/download:ro
    ports:
    - '8080:443'
    restart: always

  # Simple elasticsearch container...probably sufficient for logging
  # More intense examples: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:6.4.3'
    ports:
    - '9200:9200'
    environment:
    - discovery.type=single-node
#    volumes:
#    - elasticsearch-volume:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    ports:
    - '5601:5601'
    depends_on:
    - elasticsearch
    restart: always
#    environment:
#    - SERVER_BASEPATH=/ops/Kibana
#    - SERVER_REWRITEBASEPATH=true

  ops-gateway:
    image: 'ops-gateway'
    build: 'ops-gateway/.'
    restart: always
    environment:
    - LOGIN_PAGE_URL=https://localhost:8080/ops/

  ops-db:
    image: 'postgres:10.5'
    environment:
      POSTGRES_PASSWORD: 123
    #    volumes:
    #      - ops-db:/var/lib/postgresql/data
    restart: always

volumes:
  download-volume:
#  ops-db:
  #  full-share-file-db:
#  elasticsearch-volume: