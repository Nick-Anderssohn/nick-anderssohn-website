user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    client_max_body_size 10M;

    server {
        listen 80;
        listen [::]:80;
        server_name nickanderssohn.com www.nickanderssohn.com;
        return 301 https://nickanderssohn.com$request_uri;
    }

    server {
        listen       443 ssl;
        server_name  nickanderssohn.com;

        ssl_certificate     /etc/letsencrypt/live/nickanderssohn.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/nickanderssohn.com/privkey.pem;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /download/ {
            root  /full-share;
        }

        location /upload {
             proxy_pass  http://file-manager:8080/;
             proxy_http_version 1.1;
             proxy_set_header   Upgrade $http_upgrade;
             proxy_set_header   Connection "upgrade";
             proxy_set_header   Host $host;
             proxy_cache_bypass $http_upgrade;
             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # location /ops/Kibana/ {
        #     proxy_pass http://kibana:5601/;

        #     auth_basic "Only Nick is allowed here.";
        #     auth_basic_user_file /full-share/kibana-creds/.htpasswd;
        # }
    }
}